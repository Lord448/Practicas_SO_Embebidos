[1/10] Performing build step for 'bootloader'
[1/1] cd /home/lord448/Escritorio/STM32Workspaces/Practicas_SO_Embebidos/gateFreeRTOS/build/bootloader/esp-idf/esptool_py && /home/lord448/.espressif/python_env/idf5.0_py3.10_env/bin/python /home/lord448/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 /home/lord448/Escritorio/STM32Workspaces/Practicas_SO_Embebidos/gateFreeRTOS/build/bootloader/bootloader.bin
Bootloader binary size 0x6700 bytes. 0x900 bytes (8%) free.
[2/8] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/main.c.obj
[3/8] Linking C static library esp-idf/main/libmain.a
[4/8] Generating ld/sections.ld
[5/8] Linking CXX executable gateFreeRTOS.elf
[6/8] Generating binary image from built executable
esptool.py v4.5.1
Creating esp32 image...
Merged 2 ELF sections
Successfully created esp32 image.
Generated /home/lord448/Escritorio/STM32Workspaces/Practicas_SO_Embebidos/gateFreeRTOS/build/gateFreeRTOS.bin
[7/8] cd /home/lord448/Escritorio/STM32Workspaces/Practicas_SO_Embebidos/gateFreeRTOS/build/esp-idf/esptool_py && /home/lord448/.espressif/python_env/idf5.0_py3.10_env/bin/python /home/lord448/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /home/lord448/Escritorio/STM32Workspaces/Practicas_SO_Embebidos/gateFreeRTOS/build/partition_table/partition-table.bin /home/lord448/Escritorio/STM32Workspaces/Practicas_SO_Embebidos/gateFreeRTOS/build/gateFreeRTOS.bin
gateFreeRTOS.bin binary size 0x2d700 bytes. Smallest app partition is 0x100000 bytes. 0xd2900 bytes (82%) free.
[7/8] cd /home/lord448/esp/esp-idf/components/esptool_py && /usr/bin/cmake -D IDF_PATH=/home/lord448/esp/esp-idf -D "SERIAL_TOOL=/home/lord448/.espressif/python_env/idf5.0_py3.10_env/bin/python;;/home/lord448/esp/esp-idf/components/esptool_py/esptool/esptool.py;--chip;esp32" -D "SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args" -D WORKING_DIRECTORY=/home/lord448/Escritorio/STM32Workspaces/Practicas_SO_Embebidos/gateFreeRTOS/build -P /home/lord448/esp/esp-idf/components/esptool_py/run_serial_tool.cmake
esptool esp32 -p /dev/ttyUSB0 -b 460800 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 40m --flash_size 2MB 0x1000 bootloader/bootloader.bin 0x10000 gateFreeRTOS.bin 0x8000 partition_table/partition-table.bin
esptool.py v4.5.1
Serial port /dev/ttyUSB0
Connecting....
Chip is ESP32-D0WDQ6 (revision v1.0)
Features: WiFi, BT, Dual Core, 240MHz, VRef calibration in efuse, Coding Scheme None
Crystal is 40MHz
MAC: 0c:b8:15:f7:44:c8
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 460800
Changed.
Configuring flash size...
Flash will be erased from 0x00001000 to 0x00007fff...
Flash will be erased from 0x00010000 to 0x0003dfff...
Flash will be erased from 0x00008000 to 0x00008fff...
Compressed 26368 bytes to 16444...
Writing at 0x00001000... (50 %)
Writing at 0x000076b1... (100 %)
Wrote 26368 bytes (16444 compressed) at 0x00001000 in 0.8 seconds (effective 253.2 kbit/s)...
Hash of data verified.
Compressed 186112 bytes to 97485...
Writing at 0x00010000... (16 %)
Writing at 0x0001c010... (33 %)
Writing at 0x000218d1... (50 %)
Writing at 0x000274aa... (66 %)
Writing at 0x0002ff60... (83 %)
Writing at 0x00037c4e... (100 %)
Wrote 186112 bytes (97485 compressed) at 0x00010000 in 2.9 seconds (effective 517.3 kbit/s)...
Hash of data verified.
Compressed 3072 bytes to 103...
Writing at 0x00008000... (100 %)
Wrote 3072 bytes (103 compressed) at 0x00008000 in 0.1 seconds (effective 346.2 kbit/s)...
Hash of data verified.

Leaving...
Hard resetting via RTS pin...
